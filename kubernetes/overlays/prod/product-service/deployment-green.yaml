apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service-green
  namespace: ecommerce-prod
  labels:
    app: product-service
    version: green
    environment: prod
    app.kubernetes.io/name: product-service
    app.kubernetes.io/part-of: ecommerce-platform
spec:
  replicas: 3
  selector:
    matchLabels:
      app: product-service
      version: green
      environment: prod
  template:
    metadata:
      labels:
        app: product-service
        version: green
        environment: prod
        app.kubernetes.io/name: product-service
        app.kubernetes.io/part-of: ecommerce-platform
    spec:
      containers:
        - name: product-service
          image: 061039790334.dkr.ecr.us-west-2.amazonaws.com/prod-product-service:test
          ports:
            - containerPort: 8080
          env:
            - name: NODE_ENV
              value: "production"
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: product-service-config
                  key: db_host
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: product-service-config
                  key: db_port
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: product-service-config
                  key: db_name
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: product-service-secrets
                  key: db_username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: product-service-secrets
                  key: db_password
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: product-service-secrets
                  key: jwt_secret
          resources:
            requests:
              memory: "512Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
